name: Aseprite CI
on: [push, pull_request]
jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3
    
    - name: MSVC Configuration
      uses: ilammy/msvc-dev-cmd@v1
    
    - name: Install Dependencies
      shell: bash
      run: |
        # 下载预编译Skia（避免源码编译失败）
        skia_url="https://github.com/aseprite/skia/releases/latest/download/Skia-Windows-Release-x64.zip"
        curl -L -o skia.zip $skia_url --retry 3
        7z x skia.zip -skia
        
        # 获取必需运行时库（解决DLL缺失问题）
        declare -a dlls=(
          "libcrypto-1_1-x64.dll"
          "libssl-1_1-x64.dll"
          "vcruntime140.dll"
          "vcruntime140_1.dll"
          "msvcp140.dll"
        )
        
        for dll in "${dlls[@]}"; do
          curl -L "https://github.com/blueloveTH/aseprite/releases/download/v0.01/$dll" -o $dll
        done
    
    - name: Configure CMake
      shell: bash
      run: |
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DLAF_BACKEND=skia \
          -DENABLE_UI=ON \
          -DSKIA_DIR=$PWD/skia \
          -DSKIA_LIBRARY_DIR=$PWD/skia/out/Release-x64 \
          -DCMAKE_INSTALL_PREFIX=$PWD/package
    
    - name: Compile
      shell: bash
      run: |
        cd build
        ninja -j ${NUMBER_OF_PROCESSORS}  # 动态核心数优化
        
        # 运行时验证（提前暴露DLL问题）
        ./bin/aseprite.exe --version || echo "Runtime check failed"
    
    - name: Package Artifacts
      shell: bash
      run: |
        mkdir -p dist
        cp build/bin/aseprite.exe dist/
        cp *.dll dist/  # 包含所有必需DLL
        cp -r build/bin/data dist/
        
        # 创建便携式压缩包
        7z a aseprite-${{ matrix.build_type }}.zip ./dist/*
        
        # 生成版本标记
        echo "VERSION=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: asepprite-${{ env.VERSION }}
        path: aseprite-${{ matrix.build_type }}.zip
        retention-days: 7

name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: windows-latest  # 仅保留Windows系统
    strategy:
      fail-fast: false
      matrix:
        # 仅保留必要的构建组合
        build_type: [RelWithDebInfo]
        ui: [gui]
        scripting: [lua]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    # 仅保留Windows相关依赖
    - name: Install Skia
      shell: powershell  # 改用PowerShell提升兼容性
      run: |
        $skia_url = & "${env:GITHUB_WORKSPACE}/laf/misc/skia-url.sh"
        curl.exe -L -o skia.zip "$skia_url"
        Expand-Archive -Path skia.zip -DestinationPath skia
    
    - uses: aseprite/get-ninja@main
    
    - uses: ilammy/msvc-dev-cmd@v1  # MSVC编译环境
        
    - name: Generating Makefiles
      shell: bash
      run: |
        # 简化环境变量设置
        cmake -S . -B build -G Ninja `
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
          -DENABLE_SCRIPTING=ON `
          -DENABLE_CCACHE=OFF `
          -DLAF_BACKEND=skia `
          -DSKIA_DIR="$PWD/skia" `
          -DSKIA_LIBRARY_DIR="$PWD/skia/out/Release-x64"
    
    - name: Compiling
      shell: bash
      run: |
        cd build
        ninja
        
    # 添加打包步骤
    - name: Package Release
      shell: powershell
      run: |
        $version = (Get-Content "src/ver.h" | Select-String '#define VERSION').Line.Split()[-1].Trim('"')
        $binDir = "build\bin"
        $outputName = "aseprite-$version-windows"
        
        # 复制必要文件
        New-Item -ItemType Directory -Path $outputName
        Copy-Item "$binDir\aseprite.exe" $outputName
        Copy-Item "$binDir\aseprite.dll" $outputName
        Copy-Item "$binDir\*.dll" $outputName  # 其他依赖DLL
        
        # 创建ZIP包
        Compress-Archive -Path $outputName -DestinationPath "$outputName.zip"
        
        # 设置输出变量
        echo "PACKAGE_PATH=$outputName.zip" >> $env:GITHUB_ENV
    
    # 上传构建成果
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: asepprite-build
        path: ${{ env.PACKAGE_PATH }}
